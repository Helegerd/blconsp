# Coding:utf-8
# —à—Ç—É–∫–∞, –∫–æ—Ç–æ—Ä–∞—è —á–∏—Ç–∞–µ—Ç –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –∏–Ω—Ñ—É –∏–∑ blconsp —Ñ–∞–π–ª–æ–≤
import sys, ctypes
from PyQt5.QtWidgets import *
from PyQt5.QtGui import QFont
from PyQt5.QtCore import Qt, QObject, pyqtSignal
winsizes = (190, 180)
layerbytes = [b'', b'\x03', b'\x04', b'\x05', b'\x06']

def trueRound(num):
    '''–æ–±—ã—á–Ω–æ–µ –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ'''
    if num % 1 < 0.5:
        return int(num)
    return int(num) + 1

def octnum(firstoct):
    '''–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª-–≤–æ –æ–∫—Ç–µ—Ç–æ–≤, –∞–Ω–∞–ª–∏–∑–∏—Ä—É—è –ø–µ—Ä–≤—ã–π
    –Ω—É–∂–Ω–æ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –±–∞–π—Ç–æ–≤'''
    decnum = firstoct[0]
    binnum = bin(decnum)
    if len(binnum) < 10:
        return 1
    if binnum[2:5] == '110':
        return 2
    if binnum[2:6] == '1110':
        return 3
    if binnum[2:7] == '11110':
        return 4

def getConspParams(conspFileName):
    '''–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–æ–Ω—Å–ø–µ–∫—Ç–∞ –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞'''
    global layerbytes
    with open(conspFileName, mode='rb') as conspfile:
        def getListParams(f, depthLayer=0):
            retlist = ['']  # —Å–ø–∏—Å–æ–∫ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç—Ä–∞
            while True:
                byte = f.read(1)  # —Ç–µ–∫—É—â–∏–π —Å—á–∏—Ç—ã–≤–∞–µ–º—ã–π –±–∞–π—Ç
                if byte == layerbytes[depthLayer]:  # –∫–æ–Ω–µ—Ü –ª–∏ —ç—Ç–æ–≥–æ –∫—É—Å–∫–∞
                    return retlist
                elif byte == layerbytes[depthLayer + 1]:  # –Ω–∞—á–∞–ª–æ –ª–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫—É—Å–∫–∞
                    retlist.append(getListParams(f, depthLayer=depthLayer + 1))
                else:
                    for _i in range(octnum(byte) - 1):
                        byte = byte + f.read(1)
                    retlist[0] = retlist[0] + byte.decode('utf-8')
        return getListParams(conspfile)
        
def setConspParams(conspFileName, params=[], depthlayer=0):
    '''–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –∫–æ–Ω—Å–ø–µ–∫—Ç –≤ —Ñ–∞–π–ª —Å –∏–º–µ–Ω–µ–º conspFileName,
    —Å—á–∏—Ç—ã–≤–∞—è –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–ø–∏—Å–∫–∞ params
    depthlayer –Ω—É–∂–µ–Ω –¥–ª—è —Ä–µ–∫—É—Ä—Å–∏–∏'''
    global layerbytes
    retbyte = params[0].encode('utf-8')  # —à–∏—Ñ—Ä–æ–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞
    if len(params) > 1:
        for piece in params[1:]:
            retbyte = retbyte + layerbytes[depthlayer + 1] +\
                setConspParams(conspFileName, params=piece, depthlayer=depthlayer + 1) +\
                layerbytes[depthlayer + 1]
    if depthlayer == 0:
        with open(conspFileName, mode='wb') as conspf:
            conspf.write(retbyte)
    return retbyte

def runapp():
    '''–∑–∞–ø—É—Å–∫ –æ–∫–Ω–∞
    –≤ —Ñ—É–Ω–∫—Ü–∏–∏, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø—Ä–æ–±–ª–µ–º –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ'''
    global winsizes
    if __name__ == '__main__':
        app = QApplication(sys.argv)
        q = QDesktopWidget().availableGeometry()  # –¥–ª—è —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤ —ç–∫—Ä–∞–Ω–∞
        winsizes = (q.width(), q.height())  # –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ä–∞–∑–º–µ—Ä–æ–≤ —ç–∫—Ä–∞–Ω–∞
        consp = ConspWindowForm()
        consp.show()
        sys.exit(app.exec_())
    

class ConspWindowForm(QMainWindow):
    '''–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∏ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Å–ø–µ–∫—Ç–æ–≤'''
    def __init__(self):
        super().__init__()
        self.setWindowTitle('–ö–æ–Ω—Å–ø–µ–∫—Ç—ã –ø–æ –±–ª–æ–∫–∞–º')
        self.conspFileName = ''  # –∏–º—è —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞ —Å –∫–æ–Ω—Å–ø–µ–∫—Ç–æ–º
        self.consparr = []  # —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ–Ω—Å–ø–µ–∫—Ç–∞ –≤–≤–∏–¥–µ —Å–ø–∏—Å–∫–∞
        self.conspIsOpen = False  # –æ—Ç–∫—Ä—ã—Ç –ª–∏ –∫–æ–Ω—Å–ø–µ–∫—Ç
        self.cursorClickCoords = []  # –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫—É—Ä—Å–æ—Ä–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ
        # —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–ø–∏—Å–∫–∞ –æ–∫–Ω–∞:
        # [x_–æ—Ç—Å—Ç—É–ø–∞, —É_–æ—Ç—Å—Ç—É–ø–∞, —Ö —Ä–∞–∑–º–µ—Ä–∞, —É —Ä–∞–∑–º–µ—Ä–∞, –≤–∏–¥–∂–µ—Ç1, –≤–∏–¥–∂–µ—Ç 2, ...]

        # —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –æ–∫–Ω–æ
        self.mainlyst = [winsizes[0] // 4, winsizes[1] // 4, winsizes[0] // 2, winsizes[1] // 2, QPushButton(self), QPushButton(self), QPushButton(self), QPushButton(self)]
        self.move(self.mainlyst[0], self.mainlyst[1])
        self.setFixedSize(self.mainlyst[2], self.mainlyst[3])
        self.mainlyst[4].setText(chr(128214))  # –∫–Ω–æ–ø–∫–∞, –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –∫–æ–Ω—Å–ø–µ–∫—Ç–Ω—ã–π —Ñ–∞–π–ª
        self.mainlyst[4].resize(self.mainlyst[2] // 100 * 35, self.mainlyst[3] // 100 * 35)
        self.mainlyst[4].move(int(self.mainlyst[2] // 100 * 10.5), int(self.mainlyst[3] // 100 * 10.5))
        self.mainlyst[4].setFont(QFont('Arial', self.mainlyst[3] // 100 * 16))
        self.mainlyst[4].clicked.connect(self.changeMainToRead)
        self.mainlyst[5].setText('+')  # –∫–Ω–æ–ø–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Å–ø–µ–∫—Ç–∞
        self.mainlyst[5].resize(self.mainlyst[2] // 100 * 35, self.mainlyst[3] // 100 * 35)
        self.mainlyst[5].move(int(self.mainlyst[2] // 100 * 54.5), int(self.mainlyst[3] // 100 * 10.5))
        self.mainlyst[5].setFont(QFont('Arial', self.mainlyst[3] // 100 * 35 - 1))
        self.mainlyst[6].setText(chr(128218))  # –∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –ø–∞–ø–æ–∫ –∫–æ–Ω—Å–ø–µ–∫—Ç–æ–≤
        self.mainlyst[6].resize(self.mainlyst[2] // 100 * 35, self.mainlyst[3] // 100 * 35)
        self.mainlyst[6].move(int(self.mainlyst[2] // 100 * 10.5), int(self.mainlyst[3] // 100 * 54.5))
        self.mainlyst[6].setFont(QFont('Arial', self.mainlyst[3] // 100 * 16))
        self.mainlyst[7].setText(chr(9881))  # –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
        self.mainlyst[7].resize(self.mainlyst[2] // 100 * 35, self.mainlyst[3] // 100 * 35)
        self.mainlyst[7].move(int(self.mainlyst[2] // 100 * 54.5), int(self.mainlyst[3] // 100 * 54.5))
        self.mainlyst[7].setFont(QFont('Arial', self.mainlyst[3] // 100 * 16))
        
        # –æ–∫–Ω–æ —á—Ç–µ–Ω–∏—è –∫–æ–Ω—Å–ø–µ–∫—Ç–æ–≤
        self.readlyst = [winsizes[0] // 100 * 30, winsizes[1] // 100 * 2, winsizes[0] // 100 * 40, winsizes[1] // 100 * 96] + [QPushButton(self) for _i in range(3)]
        self.readlyst[4].setText(chr(127968))  # –∫–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        self.readlyst[4].hide()
        self.readlyst[4].resize(int(self.readlyst[2] / 100 * 4.5), int(self.readlyst[3] / 100 * 4.5))
        self.readlyst[4].move(int(self.readlyst[2] / 100 * 95.5), int(self.readlyst[3] // 100 * 0.5))
        self.readlyst[4].clicked.connect(self.changeReadToMain)
        self.readlyst[4].setFont(QFont('Arial', int(self.readlyst[2] // 100 * 2.5)))
        self.readlyst[5].setText(chr(128194))  # –∫–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Å–ø–µ–∫—Ç–∞
        self.readlyst[5].hide()
        self.readlyst[5].resize(int(self.readlyst[2] / 100 * 4.5), int(self.readlyst[3] / 100 * 4.5))
        self.readlyst[5].move(int(self.readlyst[2] / 100 * 95.5), int(self.readlyst[3] // 100 * 5.5))
        self.readlyst[5].setFont(QFont('Arial', int(self.readlyst[2] / 100 * 2)))
        self.readlyst[5].clicked.connect(self.getConspFileName)
        self.readlyst[6].hide()  # —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–Ω—Å–ø–µ–∫—Ç –∫–∞–∫
        self.readlyst[6].setText('üñ´')
        self.readlyst[6].resize(int(self.readlyst[2] / 100 * 4.5), int(self.readlyst[3] / 100 * 4.5))
        self.readlyst[6].move(int(self.readlyst[2] / 100 * 95.5), int(self.readlyst[3] // 100 * 10.5))
        self.readlyst[6].setFont(QFont('Arial', int(self.readlyst[2] / 100 * 2)))
        self.readlyst[6].clicked.connect(self.changeBords)
        self.piecelist = []  # –≤–∏–¥–∂–µ—Ç—ã, –≤–æ–ø–ª–æ—â–∞—é—â–∏–µ –∫—É—Å–∫–∏ [[begsymbollab1, textEdit1], [begsymbollab2, textEdit2], ...]
        self.begWid = 0
        self.endWid = 0  # –Ω–∞—á–∞–ª—å–Ω—ã–π –∏ –∫–æ–Ω–µ—á–Ω—ã–π –≤–∏–¥–∂–µ—Ç—ã, –≤–∏–¥–∏–º—ã–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
        self.clickedWidNum = []  # –∫–∞–∫–æ–π –≤–∏–¥–∂–µ—Ç –≤—ã–±—Ä–∞–Ω, [] –µ—Å–ª–∏ –Ω–∏–∫–∞–∫–æ–π, –∏–Ω–∞—á–µ [–Ω–æ–º–µ—Ä –≤ —Å–ø–∏—Å–∫–µ, –Ω–æ–º–µ—Ä –≤ —Å—Ç—Ä–æ–∫–µ]

                
    def changeWindow(self, towin, fromwin):
        '''–º–µ–Ω—è–µ—Ç –æ–∫–Ω–∞'''
        for widget in fromwin[4:]:
            widget.hide()
        self.setFixedSize(towin[2], towin[3])
        self.move(towin[0], towin[1])
        for widget in towin[4:]:
            widget.show()
            
    def getConspFileName(self):
        '''–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ñ–∞–π–ª —Å –∫–æ–Ω—Å–ø–µ–∫—Ç–æ–º,
        –∫–æ–Ω—Å–ø–µ–∫—Ç —Ä–∏—Å—É–µ—Ç—Å—è'''
        self.conspFileName = QFileDialog.getOpenFileName(self, '–í—ã–±–µ—Ä–µ—Ç–µ –∫–æ–Ω—Å–ø–µ–∫—Ç', '', '–ö–æ–Ω—Å–ø–µ–∫—Ç(*.blconsp)')[0]
        self.consparr = getConspParams(self.conspFileName)
        self.yPosMove = 0  # –¥–ª—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Å–º–µ—â–µ–Ω–∏—è –∫—É—Å–∫–æ–≤
        def getWids(consparr, depth=-1):  # –∑–∞–ø—Å—å –≤–∏–¥–∂–µ—Ç–æ–≤ –≤ self.piecelist
            self.piecelist.append([QLabel(self), QTextEdit(self)])
            datas = ['', '', '']  # [—É —Ä–∞–∑–º–µ—Ä –≤ %, —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞, –Ω–∞—á–∞–ª—å–Ω—ã–π —Å–∏–º–≤–æ–ª]
            index = 0  # –¥–ª—è –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∫–∏ –≤ datas
            text = consparr[0].split(')')[1]  # –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ QTextEdit
            for sym in consparr[0].split(')')[0][1:]:
                if sym == ',':
                    index += 1
                    continue
                datas[index] = datas[index] + sym
            d = depth  # —á—Ç–æ–±—ã –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å —Å–ª—É—á–∞–∏ —Å –≤–µ—Ä—Ö–æ–≤–Ω—ã–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–º
            if depth == -1:
                d += 1
            # –ª–∞–±–µ–ª —Å –º–∞—Ä–∫–æ–π
            self.piecelist[-1][0].setText(datas[2])
            self.piecelist[-1][0].resize(int(self.width() * 0.05) * d, int(self.height() * int(datas[0]) / 100))
            self.piecelist[-1][0].move(int(self.width() * 0.05) * d, self.yPosMove)
            self.piecelist[-1][0].show()
            # —Å–∞–º –∫—É—Å–æ–∫
            self.piecelist[-1][1].setText(text)
            self.piecelist[-1][1].resize(int(self.width() * (0.9 - d * 0.05)), int(self.height() * int(datas[0]) / 100))
            self.piecelist[-1][1].move(int(self.width() * 0.05) * (d + 1), self.yPosMove)
            self.piecelist[-1][1].setFont(QFont('Arial', int(datas[1])))
            self.piecelist[-1][1].show()
            # —É–¥–ª–∏–Ω–µ–Ω–∏–µ –æ—Ç—Å—Ç—É–ø–∞ –∏ –ø—Ä–æ–±–µ–∂–∫–∞ –ø–æ –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫–∏–º —É—Ä–æ–≤–Ω—è–º
            self.yPosMove += int(self.height() * int(datas[0]) / 100 + self.height() * 0.01)
            if len(consparr) > 1:
                for wid in consparr[1:]:
                    getWids(wid, depth=depth + 1)
        getWids(self.consparr)
        self.conspIsOpen = True
        # –≤–∏–¥–∂–µ—Ç(—ã) –¥–ª—è –ø–µ—Ä–µ–¥–≤–∏–¥–µ–Ω–∏—è –∫—É—Å–∫–∞ –∏ –∑–∞–º–µ–Ω—ã –º–∞—Ä–∫–∏ [–≤—ã–±–æ—Ä —Å–∏–º–≤–æ–ª–∞, –≥–∞–ª–æ—á–∫–∞, —Å—Ç—Ä–µ–ª–∫–∞ –≤–ª–µ–≤–æ, —Å—Ç—Ä–µ–ª–∫–∞ –≤–ø—Ä–∞–≤–æ]
        self.moveButtons = [QComboBox(self)] + [QPushButton(self) for _i in range(3)]
        self.moveButtons[1].setText('‚úÖ')  # –≥–∞–ª–æ—á–∫–∞
        self.moveButtons[2].setText('‚áö')  # –≤–ª–µ–≤–æ
        self.moveButtons[2].clicked.connect(self.movePiece)
        self.moveButtons[3].setText('‚áõ')  # –≤–ø—Ä–∞–≤–æ
        self.moveButtons[3].clicked.connect(self.movePiece)
        for wid in self.moveButtons:
            wid.hide()
        self.moveButtons[0].resize(int(0.1 * self.width()), int(self.height() * 0.025))
        self.moveButtons[0].move(int(self.width() * 0.025), int(self.height() * 0.025))
        self.moveButtons[1].resize(int(0.025 * self.width()), int(self.height() * 0.025))
        self.moveButtons[1].move(int(0.0625 * self.width()), 0)
        self.moveButtons[2].resize(int(0.025 * self.width()), int(self.height() * 0.025))
        self.moveButtons[2].move(0, int(self.height() * 0.025))
        self.moveButtons[2].clicked.connect(self.movePiece)
        self.moveButtons[3].resize(int(0.025 * self.width()), int(self.height() * 0.025))
        self.moveButtons[3].move(int(self.width() * 0.125), int(self.height() * 0.025))
    
    def changeBords(self):
        '''–ø–µ—Ä–µ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç —Ç–æ, –∫–∞–∫–∏–µ –≤–∏–¥–∂–µ—Ç—ã –≤–∏–¥–Ω—ã –≤ —ç–∫—Ä–∞–Ω–µ
        –Ω—É–∂–Ω–æ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –Ω–∏–º–∏'''
        lenthPiece = len(self.piecelist) - 1  # –∏–Ω–¥–µ–∫—Å –∫–æ–Ω—Ü–∞ —Å–ø–∏—Å–∫–∞ –≤–∏–¥–∂–µ—Ç–æ–≤
        if self.conspIsOpen:
            if self.piecelist[self.begWid][1].height() + self.piecelist[self.begWid][1].y() >= 0:  # –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–∞–º–æ–≥–æ –≤—ã—Å–æ–∫–æ–≥–æ –≤–∏–¥–∂–µ—Ç–∞ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
                while not (self.begWid == 0 or self.piecelist[self.begWid][1].height() + self.piecelist[self.begWid][1].y() < 0):
                    self.begWid -= 1
                if self.piecelist[self.begWid][1].height() + self.piecelist[self.begWid][1].y() < 0:
                    self.begWid += 1
            elif self.piecelist[self.begWid][1].height() + self.piecelist[self.begWid][1].y() < 0:
                while self.piecelist[self.begWid][1].height() + self.piecelist[self.begWid][1].y() < 0:
                    self.begWid += 1
            if self.piecelist[self.endWid][1].y() > self.height():  # –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–∞–º–æ–≥–æ –Ω–∏–∑–∫–æ–≥–æ –≤–∏–¥–∂–µ—Ç–∞ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
                while self.endWid != lenthPiece or self.piecelist[self.endWid][1].y() > self.height():
                    self.endWid -= 1
            elif self.piecelist[self.endWid][1].y() <= self.height():
                while not (self.piecelist[self.endWid][1].y() > self.height() or self.endWid == lenthPiece):
                    self.endWid += 1
                if self.piecelist[self.endWid][1].y() > self.height():
                    self.endWid -= 1
        
    def movePiece(self):
        '''—Å–º–µ—â–µ–Ω–∏–µ –∫—É—Å–∫–∞'''
        d = trueRound(self.piecelist[self.clickedWidNum[0]][1].x() / self.width() / 0.05)  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—Å—Ç—É–ø–æ–≤ –≤ 5% –æ—Ç –ª–µ–≤–æ–≥–æ –∫—Ä–∞—è
        if self.sender() == self.moveButtons[2] and d > 1:  # –µ—Å–ª–∏ –≤–ª–µ–≤–æ
            self.piecelist[self.clickedWidNum[0]][1].resize(int(self.width() * (1 - d * 0.05)),
                                                           self.piecelist[self.clickedWidNum[0]][1].height())  # –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ textEdit
            self.piecelist[self.clickedWidNum[0]][1].move(int(self.piecelist[self.clickedWidNum[0]][1].x() - 0.05 * self.width()),
                                                          self.piecelist[self.clickedWidNum[0]][1].y())  # —Å–º–µ—â–µ–Ω–∏–µ textEdit
        elif self.sender() == self.moveButtons[3] and d < 4:  # –µ—Å–ª–∏ –≤–ø—Ä–∞–≤–æ
            self.piecelist[self.clickedWidNum[0]][1].resize(int(self.width() * (1 - (2 + d) * 0.05)),
                                                           self.piecelist[self.clickedWidNum[0]][1].height())  # –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ textEdit
            self.piecelist[self.clickedWidNum[0]][1].move(int(self.piecelist[self.clickedWidNum[0]][1].x() + 0.05 * self.width()),
                                                          self.piecelist[self.clickedWidNum[0]][1].y())  # —Å–º–µ—â–µ–Ω–∏–µ textEdit
        
        
    # events
    
    def mousePressEvent(self, event):
        if self.conspIsOpen:
            self.changeBords()
            self.cursorClickCoords = [event.pos().x(), event.pos().y()]
            if self.clickedWidNum == []:  # –Ω–µ—Ç –ª–∏ —É–∂–µ –∫–ª–∏–∫–Ω—É—Ç–æ–≥–æ –≤–∏–¥–∂–µ—Ç–∞
                for index in range(self.begWid, self.endWid + 1):  # –ø–æ –≤–∏–¥–∂–µ—Ç–∞–º, –∫–æ—Ç–æ—Ä—ã–µ –≤–∏–¥–Ω—ã
                    if self.piecelist[index][1].y() <= self.cursorClickCoords[1] <=\
                       self.piecelist[index][1].y() + self.piecelist[index][1].height():  # –≤ –∫—É—Å–∫–µ –ª–∏
                        if self.cursorClickCoords[0] <= self.piecelist[index][1].x() and index != 0:
                            self.clickedWidNum = [index, 0]
                            # –≤–∏–¥–∂–µ—Ç—ã –¥–ª—è –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è
                            self.moveButtons[0].move(self.cursorClickCoords[0] + int(self.width() * 0.025), self.cursorClickCoords[1] + int(self.height() * 0.025))
                            self.moveButtons[1].move(self.cursorClickCoords[0] + int(self.width() * 0.0625), self.cursorClickCoords[1] + 0)
                            self.moveButtons[2].move(self.cursorClickCoords[0] + 0, self.cursorClickCoords[1] + int(self.height() * 0.025))
                            self.moveButtons[3].move(self.cursorClickCoords[0] + int(self.width() * 0.125), self.cursorClickCoords[1] + int(self.height() * 0.025))
                            for wid in self.moveButtons:
                                wid.show()
                            print('–Ω–µ–≤—ã–¥–µ–ª–µ–Ω–Ω–∞—è –º–∞—Ä–∫–∞')
                        elif self.width() * 0.95 >= self.cursorClickCoords[0] >= self.piecelist[index][1].x():
                            self.clickedWidNum = [index, 1]
                            print('–Ω–µ–≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π –∫—É—Å–æ–∫')
                        break
            else:  # –µ—Å—Ç—å —É–∂–µ –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π –≤–∏–¥–∂–µ—Ç
                self.clickedWidNum = []
                for wid in self.moveButtons:
                    wid.hide()
                print("–æ–±–Ω—É–ª–µ–Ω–∏–µ")
    
    def wheelEvent(self, event):
        if self.conspIsOpen:
            ad = event.angleDelta().y()
            if self.piecelist[0][1].y() <= 0 and event.angleDelta().y() > 0:  # –≤–≤–µ—Ä—Ö
                ad = event.angleDelta().y()
                if ad > -1 * self.piecelist[0][1].y():
                    ad = -1 * self.piecelist[0][1].y()
                
            if self.piecelist[-1][1].y() >= 0 and event.angleDelta().y() < 0:  # –≤–Ω–∏–∑
                if -1 * ad > self.piecelist[-1][1].y():
                    ad = -1 * self.piecelist[-1][1].y()
                    
            for wids in self.piecelist: # –º–∞—Ä–∫–∏ –∏ –∫—É—Å–∫–∏ –¥–≤–∏–≥–∞—é—Ç—Å—è
                for wid in wids:
                    wid.move(wid.x(), wid.y() + ad)
            for wid in self.moveButtons:  # –≤–∏–¥–∂–µ—Ç—ã —Å–º–µ—â–µ–Ω–∏—è –¥–≤–∏–≥–∞—é—Ç—Å—è
                wid.move(wid.x(), wid.y() + ad)
    
    # for screen view changing
    
    def changeReadToMain(self):
        self.changeWindow(self.mainlyst, self.readlyst)
        for wid in self.moveButtons:
            wid.hide()
        
    def changeMainToRead(self):
        self.changeWindow(self.readlyst, self.mainlyst)
        
        
#with open('consp.blconsp', mode='wb') as conspf:
#    conspf.write(b'\xd0\x91\xd0\xb0\xd0\xb9\xd1\x82\xd1\x8b\x03\xd0\x91\x04\xd0\xb0\x04\x04\xd0\xb0\x05\xd0\xb0\x05\x04\x03')
setConspParams('consp.blconsp', params=['(5,10,)–ê—Ä–∏—è'] +
                                        [['(5,10,)–ò—Å—Ç–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∏—è', ['(5,10,‚òÜ)1985']],
                                        ['(5,10,)–õ—É—á—à–∏–µ –ø–µ—Å–Ω–∏üîéüîñ', ['(5,10,‚òÜ)–¢–æ—á–∫–∞ –Ω–µ–≤–æ–∑–≤—Ä–∞—Ç–∞'], ['(5,10,‚òÜ)–ù–æ—á—å –∫–æ—Ä–æ—á–µ –¥–Ω—è']]])
print(getConspParams('consp.blconsp'))
runapp()
